SQL> -- 현재 시스템에 존재하는 모든 유저를 출력
SQL> -- 오라클에서 시스템 정보를 알기 위해서는 사전을 조회
SQL> -- 현재 접속자가 관리자인 경우, 사전의 접두어는 DBA_, V$
SQL> SELECT USERNAME FROM DBA_USERS;

USERNAME                                                                        
------------------------------------------------------------                    
SYS                                                                             
SYSTEM                                                                          
ANONYMOUS                                                                       
JAVA                                                                            
JS                                                                              
APEX_PUBLIC_USER                                                                
FLOWS_FILES                                                                     
APEX_040000                                                                     
OUTLN                                                                           
DIP                                                                             
ORACLE_OCM                                                                      

USERNAME                                                                        
------------------------------------------------------------                    
XS$NULL                                                                         
MDSYS                                                                           
CTXSYS                                                                          
DBSNMP                                                                          
XDB                                                                             
APPQOSSYS                                                                       
HR                                                                              

18 rows selected.

SQL> -- 일반 계정인 JS로 로그인
SQL> CONN JS/1234;
Connected.
SQL> SHOW USER;
USER is "JS"
SQL> -- 제약조건 학습
SQL> -- NOT NULL, DEFAULT, UNIQUE, CHECK, PRIMARY KET, FOREIGN KEY
SQL> -- JS가 보유한 테이블 목록 조회
SQL> -- 사전을 조회해야 함. 현재 계정이 일반 계정이므로 USER_로 시작
SQL> SELECT TABLE_NAME FROM USER_TABLES;

TABLE_NAME                                                                      
------------------------------------------------------------                    
MEMBER                                                                          

SQL> -- 제약 조건 중 PRIMARY KEY
SQL> -- 특징: UNIQUE + NOT NULL
SQL> -- UNIQUE만으로는 아직 무결성을 보장받지 못하는 경우
SQL> CREATE TABLE MEMBER2(
  2  	ID VARCHAR2(20)
  3  	, EMAIL VARCHAR2(25)
  4  	, REGDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> DROP TABLE MEMVER2;
DROP TABLE MEMVER2
           *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> DROP TABLE MEMBER2;

Table dropped.

SQL> CREATE TABLE MEMBER2(
  2  	ID VARCHAR2(20) UNIQUE
  3  	, EMAIL VARCHAR2(25)
  4  	, REGDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> DROP TABLE MEMBER2;

Table dropped.

SQL> CREATE TABLE MEMBER2(
  2  	ID VARCHAR2(20) UNIQUE
  3  	, EMAIL VARCHAR2(25) NOT NULL
  4  	, REGDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> INSERT INTO MEMBER2(ID, EMAIL) VALUES('KIM', 'DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(ID, EMAIL) VALUES('KIM', 'DAUM');
INSERT INTO MEMBER2(ID, EMAIL) VALUES('KIM', 'DAUM')
*
ERROR at line 1:
ORA-00001: unique constraint (JS.SYS_C007010) violated 


SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> SELECT * FROM MEMBER2;

ID                                                                              
----------------------------------------                                        
EMAIL                                              REGDATE                      
-------------------------------------------------- --------                     
KIM                                                                             
DAUM                                               25/05/07                     
                                                                                
                                                                                
DAUM                                               25/05/07                     
                                                                                
                                                                                
DAUM                                               25/05/07                     
                                                                                

ID                                                                              
----------------------------------------                                        
EMAIL                                              REGDATE                      
-------------------------------------------------- --------                     
                                                                                
DAUM                                               25/05/07                     
                                                                                

SQL> -- UNIQUE는 중복을 허용하지 않지만, NULL을 허용한다. 따라서 테이블에 입력된 데이터를 구분하기 위한 숫자형 컬럼에는 UNIQUE+NOT NULL 의 제약조건이 필요하다.
SQL> -- 위 두 가지를 합쳐놓은 제약조건을 PRIMARY KEY라고 한다.
SQL> CREATE TABLE MEMBER3(
  2  	ID NUMBER PRIMARY KEY
  3  	, EMAIL VARCHAR2(25)
  4  	, REGDATE DATE DEFAULT SYSDATE
  5  	, USERID VARCHAR2(20)T
  6  );
	, USERID VARCHAR2(20)T
	                     *
ERROR at line 5:
ORA-00907: missing right parenthesis 


SQL> ED
Wrote file afiedt.buf

  1  CREATE TABLE MEMBER3(
  2  	ID NUMBER PRIMARY KEY
  3  	, USERID VARCHAR2(20)
  4  	, EMAIL VARCHAR2(25)
  5  	, REGDATE DATE DEFAULT SYSDATE
  6* )
SQL> /

Table created.

SQL> -- PRIMARY KEY값은 유일해야하므로, 시스템이 알아서 증가시켜가며 넣도록 위임해야 함
SQL> -- 오직 숫자값만을 전용으로 증가시켜주는 객체인 시퀀스 이용
SQL> CREATE SEQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;
CREATE SEQUENCE SEQ_MEMBER3
*
ERROR at line 1:
ORA-01031: insufficient privileges 


SQL> -- 권한을 부여받기 위해서 SYSTEM으로 접속
SQL> CONN SYSTEM/1234
Connected.
SQL> GRANT CREATE SEQUENCE TO JS;

Grant succeeded.

SQL> CONN JS/1234;
Connected.
SQL> CREATE SEQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;

Sequence created.

SQL> INSERT INTO MEMBER3(ID, USERID, EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL, 'KING', 'DAUM');

1 row created.

SQL> INSERT INTO MEMBER3(ID, USERID, EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL, 'CAT', 'DDC'););
VALUES (SEQ_MEMBER3.NEXTVAL, 'CAT', 'DDC');)
                                          *
ERROR at line 2:
ORA-00911: invalid character 


SQL> VALUES (SEQ_MEMBER3.NEXTVAL, 'CAT', 'DDC');
SP2-0734: unknown command beginning "VALUES (SE..." - rest of line ignored.
SQL> INSERT INTO MEMBER3(ID, USERID, EMAIL)
  2  VALUES (SEQ_MEMBER3.NEXTVAL, 'CAT', 'DDC');

1 row created.

SQL> SELECT * FROM MEMBER;

no rows selected

SQL> SELECT * FROM MEMBER3;

        ID USERID                                                               
---------- ----------------------------------------                             
EMAIL                                              REGDATE                      
-------------------------------------------------- --------                     
         1 KING                                                                 
DAUM                                               25/05/07                     
                                                                                
         2 CAT                                                                  
DDC                                                25/05/07                     
                                                                                

SQL> SPOOL OFF
